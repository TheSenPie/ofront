#include <stdio.h>
#include <sys/mman.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <fcntl.h>

/* cf. Broadcom BCM2835 ARM Peripherals */
#define PERI_SIZE	0x1000000 /* size of peripherals data */

static void* periMem;	//BCM2835 peripherals memory
 
static int mapPeripherals(long periBase) {
	int mem_fd; 	// file descriptor to peripherals memory virtual file '/dev/mem'
	if (periMem) { // already open
		return 0;
	};
	if ((mem_fd = open("/dev/mem", O_RDWR | O_SYNC) ) < 0) {
		printf("Failed to open /dev/mem, check permissions.\n");
		return -1;
	}
	periMem = mmap(NULL, PERI_SIZE, PROT_READ | PROT_WRITE, MAP_SHARED, mem_fd, periBase);
	close(mem_fd);
	if (periMem == MAP_FAILED) {
		perror("mmap");
		periMem = NULL;
		return -1;
	}
	return 0;
}

static void unmapPeripherals() {
	if (periMem) {
		munmap(periMem, PERI_SIZE);
		periMem = NULL;
	}
}
